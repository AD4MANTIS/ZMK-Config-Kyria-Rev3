/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 /*
  * German QWERTZ Layout
  */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/ {
    macros {
        GER_CARET: GER_CARET {
            label = "&GER_CARET";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            
            
            bindings
                = <&kp GRAVE>
                , <&kp SPACE>;
        };
    GER_GRAVE: GER_GRAVE {
            label = "&GER_GRAVE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            
            
            bindings
                = <&kp LS(EQUAL)>
                , <&kp SPACE>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E  |   R   |  T   |                                                      |  Y   |  U    |  I  |  O   |   Ö   |   Ü  |
            // |  TAB  |  A  |  S  |  D  |   F   |  G   |                                                      |  H   |  J    |  K  |  L   |   P   |   A  |
            // | LGUI  |  Z  |  X  |  C  |   V   |  B   |   DEL    |               |  |      |     LAYER 3     |  N   |  M    |  ,  |  .   |   /   | CTRL |
            //                     |     | LCTRL | LALT |  LSHIFT  | Layer 1 / RET |  | BSPC | LAYER 2 / SPACE | RALT | RCTRL |     |
            bindings = <
&kp ESC   &kp Q  &kp W  &kp E  &kp R      &kp T                                                     &kp Y     &kp U      &kp I      &kp O    &kp SEMI  &kp LBKT
&kp TAB   &kp A  &kp S  &kp D  &kp F      &kp G                                                     &kp H     &kp J      &kp K      &kp L    &kp P     &kp SQT
&kp LGUI  &kp Z  &kp X  &kp C  &kp V      &kp B     &kp DEL    &none         &none     &mo 3        &kp N     &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                        &none  &kp LCTRL  &kp LALT  &kp LSHFT  &lt 1 RET     &kp BSPC  &lt 2 SPACE  &kp RALT  &kp RCTRL  &none
            >;
        };

        // |  | 1 | 2 | 3 | 4 | 5 |    |  F9  |  F10  | F11 | F12  |  |  |
        // |  | 6 | 7 | 8 | 9 | 0 |    | LEFT | RIGHT | UP  | DOWN |  |  |
        // |  | F | 1 | - | F | 5 |    |      | HOME  | END |      |  |  |
        layer_Lower {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                         &kp F9   &kp F10  &kp F11    &kp F12    &trans  &trans
&trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0                                         &kp LEFT &kp DOWN &kp UP     &kp RIGHT  &trans  &trans
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &trans  &none          &none   &trans  &trans   &kp HOME &kp END    &trans     &trans  &trans
                        &none   &trans  &trans  &trans  &trans         &trans  &trans  &trans   &trans   &none
            >;
        };

        // |  | * | : | ; | ! | ? |    | { | } | ' | " | ` |  |
        // |  | \ | / | + | - | = |    | ( | ) | < | > | _ |  |
        // |  | ~ | ^ | & | | | % |    | [ | ] | @ | # | $ |  |
        layer_Symbol {
            bindings = <
&none    &kp KP_MULTIPLY   &kp LS(DOT)  &kp LS(COMMA)               &kp LS(N1)  &kp LS(MINUS)                                     &kp LC(LA(N7))  &kp LC(LA(N0))     &kp LS(BSLH)           &kp LS(N2)    &GER_GRAVE   &none
&none  &kp LC(LA(MINUS))  &kp KP_SLASH       &kp RBKT                 &kp FSLH     &kp LS(N0)                                         &kp LS(N8)      &kp LS(N9)  &kp NON_US_BSLH  &kp LS(NON_US_BSLH)  &kp LS(FSLH)   &none
&none   &kp LC(LA(RBKT))    &GER_CARET     &kp LS(N6)  &kp LC(LA(NON_US_BSLH))     &kp LS(N5)  &trans  &none      &none   &trans  &kp LC(LA(N8))  &kp LC(LA(N9))    &kp LC(LA(Q))             &kp BSLH    &kp LS(N4)   &none
                                                &none                   &trans         &trans  &trans  &trans     &trans  &trans          &trans          &trans            &none
            >;
        };

        function_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |RGB_TOG|      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |       |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |       |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |       |      |      |
            bindings = <
&trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                  &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &trans  &trans
&trans  &trans  &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans                                        &trans           &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &trans  &trans
&trans  &trans  &trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans           &trans           &trans           &trans           &trans  &trans
                            &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans           &trans           &trans
            >;
        };
    };
};
